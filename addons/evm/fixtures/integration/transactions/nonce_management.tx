# Test nonce management for multiple transactions
# Verifies that nonces are properly incremented

addon "evm" {
    chain_id = input.chain_id
    rpc_api_url = input.rpc_url
}

signer "sender" "evm::secret_key" {
    secret_key = input.sender_private_key
}

# Send multiple transactions in sequence
# Each should have incrementing nonces

action "tx1" "evm::send_eth" {
    recipient_address = input.recipient
    amount = 1000000000000000  # 0.001 ETH
    signer = signer.sender
}

action "tx2" "evm::send_eth" {
    recipient_address = input.recipient
    amount = 2000000000000000  # 0.002 ETH
    signer = signer.sender
}

action "tx3" "evm::send_eth" {
    recipient_address = input.recipient
    amount = 3000000000000000  # 0.003 ETH
    signer = signer.sender
}

# Verify all transactions succeeded
action "check_tx1" "evm::check_confirmations" {
    tx_hash = action.tx1.tx_hash
    confirmations = 1
    rpc_api_url = addon.evm.rpc_api_url
    chain_id = addon.evm.chain_id
}

action "check_tx2" "evm::check_confirmations" {
    tx_hash = action.tx2.tx_hash
    confirmations = 1
    rpc_api_url = addon.evm.rpc_api_url
    chain_id = addon.evm.chain_id
}

action "check_tx3" "evm::check_confirmations" {
    tx_hash = action.tx3.tx_hash
    confirmations = 1
    rpc_api_url = addon.evm.rpc_api_url
    chain_id = addon.evm.chain_id
}

output "tx1_hash" {
    value = action.tx1.tx_hash
}

output "tx2_hash" {
    value = action.tx2.tx_hash
}

output "tx3_hash" {
    value = action.tx3.tx_hash
}

output "all_confirmed" {
    value = "true"
}