addon "stacks" {
  network_id = input.stacks_network_id
  rpc_api_url = input.stacks_api_url
}

signer "alice" "stacks::web_wallet" {
  expected_address = "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
  // mnemonic = "cycle puppy glare enroll cost improve round trend wrist mushroom scorpion tower claim oppose clever elephant dinosaur eight problem before frozen dune wagon high"
  // // 02c4b5eacb71a27be633ed970dcbc41c00440364bc04ba38ae4683ac24e708bf33
}

action "get_name_price" "stacks::call_readonly_fn" {
  description = "Preorder name"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "get-name-price"
  function_args = [
      stacks::cv_buff(encode_hex(variable.namespace)),
      stacks::cv_buff(encode_hex(variable.name))
  ]
  sender = "ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC"
}

action "send_name_preorder" "stacks::call_contract" {
  description = "Send Preorder ${variable.name}.${variable.namespace} transaction"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "name-preorder"
  function_args = [
      stacks::cv_buff(
        ripemd160(sha256(
          [
            encode_hex("${variable.name}.${variable.namespace}"),
            encode_hex(variable.salt)
          ]
        ))
      ),
      stacks::cv_uint(action.get_name_price.value), 
  ]
  // post_conditions = [stacks::revert_if_account_sends_more_than("signer", action.get_name_price.value)]
  post_condition_mode = "allow"
  signer = signer.alice
  confirmations = 1
}

action "send_name_register" "stacks::call_contract" {
  description = "Register name"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "name-register"
  function_args = [
      stacks::cv_buff(encode_hex(variable.namespace)),
      stacks::cv_buff(encode_hex(variable.name)),
      stacks::cv_buff(encode_hex(variable.salt)),
      stacks::cv_buff(encode_hex(variable.zonefile)),
  ]
  signer = signer.alice
  confirmations = 1
  depends_on = [action.send_name_preorder]
}
