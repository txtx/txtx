action "defaults" "stacks::set_default_network" {
  network_id = env.stacks_network_id
  rpc_api_url = env.stacks_api_url
}
// output "out" {
//   value =  [
//       stacks::cv_buff(
//         ripemd160(sha256(
//           [
//             encode_hex(input.namespace),
//             encode_hex(input.salt)
//           ]
//         ))
//       ),
//       stacks::cv_uint(6400000), 
//   ]
// }

action "send_namespace_preorder" "stacks::send_contract_call" {
  description = "Send Namespace Preorder transaction"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "namespace-preorder"
  function_args = [
      stacks::cv_buff(
        ripemd160(sha256(
          [
            encode_hex(input.namespace),
            encode_hex(input.salt)
          ]
        ))
      ),
      stacks::cv_uint(64000000000), 
  ]
  signer = wallet.alice
  confirmations = 1
}

action "send_namespace_reveal" "stacks::send_contract_call" {
  description = "Send Namespace Reveal ${input.namespace} transaction"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "namespace-reveal"
  function_args = [
      stacks::cv_buff(encode_hex(input.namespace)),
      stacks::cv_buff(encode_hex(input.salt)),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(1),
      stacks::cv_uint(0),
      stacks::cv_uint(0),
      stacks::cv_uint(10000),
      stacks::cv_principal("ST2JHG361ZXG51QTKY2NQCVBPPRRE2KZB1HR05NNC")
  ]
  signer = wallet.alice
  confirmations = 1
  depends_on = [action.send_namespace_preorder.tx_id]
}

action "send_namespace_ready" "stacks::send_contract_call" {
  description = "Send Namespace Ready ${input.namespace} transaction"
  contract_id = "ST000000000000000000002AMW42H.bns"
  function_name = "namespace-ready"
  function_args = [
      stacks::cv_buff(encode_hex(input.namespace))
  ]
  signer = wallet.alice
  confirmations = 1
  depends_on = [action.send_namespace_reveal.tx_id]
}
