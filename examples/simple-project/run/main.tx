module "runbook" {
  name = "Runbook 101"
  description = "Lorem ipsum dolor sit amet"
}

// variable "binary_op_add" {
//   description = "Greeting variable"
//   value = 1 + 2
// }

// variable "hello" {
//   description = "Greeting variable"
//   value = "Hello"
// }

// variable "world" {
//   description = "Destination"
//   value = "World"
// }

// variable "json_input" {
//   description = "Input json"
//   value = "{ \"message\": \"Hello, World!\" }"
// }

// module "concatenate_inputs" {
//   description = "${variable.hello}, ${variable.world}!"
// }

// module "query_json_input" {
//   description = json_query(variable.json_input, ".message")
// }

// output "message_from_concatenation" {
//   description = "Combining variables"
//   value = module.concatenate_inputs
// }

// output "message_from_jq" {
//   description = "Combining variables"
//   value = module.query_json_input
// }

variable "four" {
  description = "Greeting variable"
  value = 2 + 2
}

variable "five" {
  description = "Greeting variable"
  value = 2 + 3
}

variable "binary_op_add" {
  description = "Greeting variable"
  value = variable.four.value + variable.five.value
}

output "output_1" {
  description = "Combining variables"
  value = variable.binary_op_add.value
}

output "output_2" {
  description = "Combining variables"
  value = output.output_1.value + 4
}

addon "stacks" "call_contract" "increment" {
  description = "Invoke increment"
  contract_id = "ST173JK7NZBA4BS05ZRATQH1K89YJMTGEH1Z5J52E.counter"
  function_name = "increment"
}

output "output_3" {
  description = "Encoded contract call"
  value = addon.increment.bytes
}

addon "stacks" "transaction" "increment_tx" {
  no_interact {
    transaction_payload_bytes = addon.increment.bytes
    nonce = 1
    fee = 1200
    sender_mnemonic = "fetch outside black test wash cover just actual execute nice door want airport betray quantum stamp fish act pen trust portion fatigue scissors vague"
    sender_derivation_path = "m/44'/5757'/0'/0/0"
  }
  // cli_interact {
  //   nonce = stacks_fetch_nonce(stacks_address(public_key.bytes, "mainnet"))
  //   payload_bytes = 1
  //   pre_conditions_bytes = 1
  // }
  // web_interact {
  //   payload_bytes = 1
  //   pre_conditions_bytes = 1
  // }
  // stacks_node_rpc_url = 1
  // confirmations_required = 0
}

output "output_4" {
  description = "Encoded contract call"
  value = addon.increment_tx.bytes
}


// addon "stacks" "transaction" "increment_tx" {
//   nonce = stacks_fetch_nonce(stacks_address(public_key.bytes, "mainnet"))
//   payload_bytes = 1
//   pre_conditions_bytes = 1 
//   private_key_bytes = yield
//   stacks_node_rpc_url = 1
//   confirmations_required = 0
// }
