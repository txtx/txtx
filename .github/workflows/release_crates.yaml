name: Publish Rust Crates

on:
  pull_request:
  push:
    branches:
      - main
      - ci/release

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry and index
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-${{ runner.os }}-

      - name: Login to crates.io
        if: github.event_name == 'push'
        run: cargo login ${{ secrets.CRATES_API_TOKEN }}

      - name: Publish Crates
        run: |
          for crate in addons/svm crates/txtx-gql crates/txtx-core crates/txtx-addon-kit; do
            if [ -f "$crate/Cargo.toml" ]; then
              echo "Checking $crate for changes..."
              VERSION=$(cargo metadata --format-version=1 | jq -r '.packages[] | select(.manifest_path | startswith("'"$crate"'")) | .version')
              
              if cargo search $(basename $crate) | grep -q "$VERSION"; then
                echo "$crate is already published with version $VERSION, skipping..."
                continue
              fi
              
              echo "Publishing $crate..."
              if [ "${{ github.event_name }}" = "pull_request" ]; then
                cargo publish --manifest-path "$crate/Cargo.toml" --dry-run
              else
                cargo publish --manifest-path "$crate/Cargo.toml"
              fi
            else
              echo "Skipping $crate, Cargo.toml not found."
            fi
          done
        env:
          CRATES_API_TOKEN: ${{ secrets.CRATES_API_TOKEN }}
