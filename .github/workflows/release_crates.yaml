name: Publish Rust Crates

on:
  pull_request:
  push:
    branches:
      - main
      - ci/release

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install tq
        run: cargo binstall -y tomlq

      - name: Cache Cargo registry and index
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-${{ runner.os }}-

      - name: Login to crates.io
        if: github.event_name == 'push'
        run: cargo login ${{ secrets.CRATES_API_TOKEN }}

      - name: Publish Crates
        run: |
          for loc in addons/svm crates/txtx-gql crates/txtx-core crates/txtx-addon-kit; do
            manifest="$loc/Cargo.toml"
            if [ -f "$manifest" ]; then
              echo "Checking $manifest for changes..."
              
              CRATE_NAME=$(tq -f "$manifest" .package.name)
              VERSION=$(tq -f "$manifest" .package.version)

              if cargo search "$CRATE_NAME" | grep "$VERSION"; then
                echo "$CRATE_NAME ($manifest) is already published with version $VERSION, skipping..."
                continue
              fi

              echo "Publishing $CRATE_NAME from $manifest..."
              if [ "${{ github.event_name }}" = "pull_request" ]; then
                cargo publish --manifest-path "$manifest" --dry-run
              else
                cargo publish --manifest-path "$manifest"
              fi
            else
              echo "Skipping $manifest, Cargo.toml not found."
            fi
          done
        env:
          CRATES_API_TOKEN: ${{ secrets.CRATES_API_TOKEN }}
